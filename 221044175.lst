     1                                  ;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     2                                  ;assemble and link with: 
     3                                  ;assemble: -->> nasm -f win64 -o 221044175.o 221044175.asm -l 221044175.lst
     4                                  ;link:	   -->> gcc -o 221044175 221044175.o
     5                                  ;run:      -->> 221044175
     6                                  ;debugger: -->> x64dbg 221044175
     7                                  ;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     8                                  ;-----------------------------------------
     9                                  
    10                                  ;file: 221044175.asm (nombre programa)
    11                                  ;registro:221044175
    12                                  ;nombres y apellidos:Francisco Julian Choque Ramos
    13                                  
    14                                  global main 
    15                                  extern printf, scanf	
    16                                  
    17                                  segment .data
    18                                  ;aqui se declaran variables inicializadas
    19 00000000 496E67726573617220-     msj1 db  "Ingresar  a: ",0  
    19 00000009 20613A2000         
    20 0000000E 496E67726573617220-     msj2 db  "Ingresar  b: ",0  
    20 00000017 20623A2000         
    21 0000001C 496E67726573617220-     msj3 db  "Ingresar  c: ",0  
    21 00000025 20633A2000         
    22 0000002A 256400                  fmt1 db "%d",0
    23 0000002D 256400                  fmt2 db "%d",0
    24 00000030 256400                  fmt3 db "%d",0
    25 00000033 643D20256400            respuesta db "d= %d",0
    26                                  		
    27                                  segment .bss
    28                                  ;Block Started by Symbol(BSS) 
    29                                  ;aqui van las variables declaradas pero sin inicializar
    30 00000000 <res 00000004>          a resd 1
    31 00000004 <res 00000004>          b resd 1
    32 00000008 <res 00000004>          c resd 1
    33 0000000C <res 00000004>          d resd 1
    34                                  
    35                                  segment .text 				
    36                                  main:	
    37                                  ;etiqueta que indica el comienzo del programa principal
    38                                  ;aqui van las instrucciones
    39                                  ;...
    40                                  ;...
    41                                  
    42                                  
    43 00000000 4883EC20                sub rsp,0x20
    44                                  
    45 00000004 48B9-                   mov rcx,msj1
    45 00000006 [0000000000000000] 
    46 0000000E E8(00000000)            call printf
    47                                  
    48 00000013 48B9-                   mov rcx,fmt1
    48 00000015 [2A00000000000000] 
    49 0000001D 48BA-                   mov rdx,a
    49 0000001F [0000000000000000] 
    50 00000027 E8(00000000)            call scanf
    51                                  
    52 0000002C 48B9-                   mov rcx,msj2
    52 0000002E [0E00000000000000] 
    53 00000036 E8(00000000)            call printf
    54                                  
    55 0000003B 48B9-                   mov rcx,fmt2
    55 0000003D [2D00000000000000] 
    56 00000045 48BA-                   mov rdx,b
    56 00000047 [0400000000000000] 
    57 0000004F E8(00000000)            call scanf
    58                                  
    59 00000054 48B9-                   mov rcx,msj3
    59 00000056 [1C00000000000000] 
    60 0000005E E8(00000000)            call printf
    61                                  
    62 00000063 48B9-                   mov rcx,fmt3
    62 00000065 [3000000000000000] 
    63 0000006D 48BA-                   mov rdx,c
    63 0000006F [0800000000000000] 
    64 00000077 E8(00000000)            call scanf
    65                                  
    66 0000007C B9[00000000]            mov ecx,a
    67 00000081 BA[04000000]            mov edx,b
    68 00000086 41B8[08000000]          mov r8d,c
    69 0000008C E822000000              call calcular
    70                                  
    71 00000091 890425[0C000000]        mov [d],eax
    72                                  
    73 00000098 48B9-                   mov rcx,respuesta
    73 0000009A [3300000000000000] 
    74 000000A2 8B1425[0C000000]        mov edx,[d]
    75 000000A9 E8(00000000)            call printf
    76                                  
    77 000000AE 4883C420                add rsp,0x20
    78                                  
    79 000000B2 C3                      ret
    80                                  ;--------------------------------------
    81                                  ;============ subrutina ===============
    82                                  ;--------------------------------------
    83                                  ;aqui instrucciones subrutina (funcion)
    84                                  ;...
    85                                  ;...
    86                                  ; d =  (( -b * 20 ) & ( a << 5 ) * 10))  | (( c % b ) ^ 30)
    87                                  calcular:   
    88 000000B3 4831C0                      xor rax,rax
    89 000000B6 4831DB                  	xor rbx,rbx
    90 000000B9 678B1A                  	mov ebx,[edx]
    91 000000BC F7DB                    	neg ebx
    92 000000BE 6BDB14                  	imul ebx,20
    93                                  	
    94 000000C1 678B01                  	mov eax,[ecx]
    95 000000C4 C1E005                  	Sal eax,5
    96 000000C7 6BC00A                  	imul eax,10
    97                                  	
    98 000000CA 21C3                    	and ebx,eax
    99                                  	
   100 000000CC 67418B00                	mov eax,[r8d]
   101 000000D0 99                      	cdq
   102 000000D1 67448B2A                	mov r13d,[edx]
   103 000000D5 41F7FD                  	idiv r13d
   104 000000D8 83F21E                  	xor edx,30
   105                                  	
   106 000000DB 09D3                    	or ebx,edx
   107                                  	
   108 000000DD 89D8                    	mov eax,ebx
   109 000000DF C3                      ret
